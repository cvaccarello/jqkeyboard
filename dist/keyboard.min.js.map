{"version":3,"sources":["keyboard.js"],"names":["$","fn","caret","start","end","$el","this","el","ss","test","type","selectionStart","selectionEnd","setTimeout","focus","VirtualKeyboard","Keyboard","configuration","_classCallCheck","extend","title","disabled","draggable","fixed_position","left","undefined","top","key_delay","key_map","placeholder","name","shift","meta1","meta2","normal","tab","onKeyPressed","keyPressedTab","accept","keyPressedAccept","ok","enter","keyPressedEnter","bksp","keyPressedDelete","space","keyPressedSpace","done","keyPressedDone","clear","keyPressedClear","layout","default","textarea","email","number","tel","classes","keyboard_class","key_class","selectors","ignore_types","$body","$html","$hidden","$keyboards","_createKeyboards","$keyboard","$input","original_input_text","current_keyboard_layout","current_keyboard_type","repeaterTimeout","repeaterInterval","disable_key_repeat","moving","mouse_position","x","y","keyboard_transform_position","keyboard_start_transform_position","keyboard_dimensions","width","height","screen_width","outerWidth","screen_height","window","innerHeight","body_position","css","body_margin","parseInt","last_key_down","time","Date","now","value","_this","document","on","e","$target","currentTarget","is","isOpened","closeKeyboard","openKeyboard","keyboard_selector","target","closest","length","_getMousePosition","addClass","preventDefault","_this$_getMousePositi","offset","_containWithinScreen","transform","removeKeyRepeater","removeClass","$element","val","_getType","Object","keys","filter","children","hide","show","isFixed","appendTo","position","outerHeight","_appendPositionedKeyboard","_this2","finalize","off","detach","resetKeyboard","$key","key_selector","attr","find","$button","keyPressedFunction","_this3","call","setInterval","clearTimeout","clearInterval","key","cpt","_getCursorPositionAndText","max","pos","substr","touchendDelayedCloseKeyboard","$inputs","$next_input","get","index","prop","toLowerCase","_this4","keyboard_type_key","keyboard_type","layout_key","layout_type","$layout","row_key","append","row","$row","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","split","Symbol","iterator","next","key_name","custom","data","setKeyRepeater","setKeyPressedClass","switchLayout","keyPressed","html","text","err","add","input_offset","input_height","scrollTop","$label","parent","label_offset","visibility","start_pos","end_pos","error","pageX","pageY","isNaN","touches","obj","scroll_offset","activate"],"mappings":"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","file":"keyboard.min.js","sourcesContent":["\r\n$.fn.caret = function (start, end) {\r\n\tvar $el = this,\r\n\t\tel = $el[0],\r\n\t\tss = 'selectionStart' in el;\r\n\r\n\tif (!/(email|number)/i.test(el.type)) {\r\n\t\tif (ss) {\r\n\t\t\tel.selectionStart = start;\r\n\t\t\tel.selectionEnd = end || start;\r\n\t\t}\r\n\t}\r\n\r\n\tsetTimeout(() => { $el.focus(); }, 1);\r\n\r\n\treturn this;\r\n}\r\n\r\n\r\n// NOTE:  the following can be added to inputs in order to lightly control keyboard\r\n//\t\t\t'.no-keyboard' - keyboard won't be opened when interacting with an input of this class\r\n\r\nclass Keyboard {\r\n\tconstructor(configuration) {\r\n\t\t// configuration for this keyboard is saved here\r\n\t\tthis.configuration = $.extend({}, {\r\n\t\t\ttitle: 'Virtual Keyboard',\r\n\r\n\t\t\tdisabled: false,\r\n\r\n\t\t\tdraggable: true,\r\n\r\n\t\t\tfixed_position: {\r\n\t\t\t\tleft: undefined,\r\n\t\t\t\ttop: undefined\r\n\t\t\t},\r\n\r\n\t\t\t// how long to lock a key from being touch again, in milliseconds\r\n\t\t\tkey_delay: 100,\r\n\r\n\t\t\tkey_map: {\r\n\t\t\t\tplaceholder: {\r\n\t\t\t\t\tname: '&nbsp;'\r\n\t\t\t\t},\r\n\t\t\t\tshift: {\r\n\t\t\t\t\tname: 'Shift'\r\n\t\t\t\t},\r\n\t\t\t\tmeta1: {\r\n\t\t\t\t\tname: '&123'\r\n\t\t\t\t},\r\n\t\t\t\tmeta2: {\r\n\t\t\t\t\tname: '#+='\r\n\t\t\t\t},\r\n\t\t\t\tnormal: {\r\n\t\t\t\t\tname: 'ABC'\r\n\t\t\t\t},\r\n\t\t\t\ttab: {\r\n\t\t\t\t\tname: 'Tab',\r\n\t\t\t\t\tonKeyPressed: this.keyPressedTab\r\n\t\t\t\t},\r\n\t\t\t\taccept: {\r\n\t\t\t\t\tname: 'Accept',\r\n\t\t\t\t\tonKeyPressed: this.keyPressedAccept\r\n\t\t\t\t},\r\n\t\t\t\tok: {\r\n\t\t\t\t\tname: 'ok',\r\n\t\t\t\t\tonKeyPressed: this.keyPressedAccept\r\n\t\t\t\t},\r\n\t\t\t\tenter: {\r\n\t\t\t\t\tname: 'Enter',\r\n\t\t\t\t\tonKeyPressed: this.keyPressedEnter\r\n\t\t\t\t},\r\n\t\t\t\tbksp: {\r\n\t\t\t\t\tname: '&#8678;',\r\n\t\t\t\t\tonKeyPressed: this.keyPressedDelete\r\n\t\t\t\t},\r\n\t\t\t\tspace: {\r\n\t\t\t\t\tname: '&nbsp;',\r\n\t\t\t\t\tonKeyPressed: this.keyPressedSpace\r\n\t\t\t\t},\r\n\t\t\t\tdone: {\r\n\t\t\t\t\tname: 'Done',\r\n\t\t\t\t\tonKeyPressed: this.keyPressedDone\r\n\t\t\t\t},\r\n\t\t\t\tclear: {\r\n\t\t\t\t\tname: 'Clear',\r\n\t\t\t\t\tonKeyPressed: this.keyPressedClear\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tlayout: {\r\n\t\t\t\tdefault: {\r\n\t\t\t\t\tnormal: [\r\n\t\t\t\t\t\t'q w e r t y u i o p {bksp}',\r\n\t\t\t\t\t\t'{tab} a s d f g h j k l {placeholder}',\r\n\t\t\t\t\t\t'{shift} z x c v b n m , . {shift}',\r\n\t\t\t\t\t\t'{meta1} {space} {done}'\r\n\t\t\t\t\t],\r\n\t\t\t\t\tshift: [\r\n\t\t\t\t\t\t'Q W E R T Y U I O P {bksp}',\r\n\t\t\t\t\t\t'{tab} A S D F G H J K L {placeholder}',\r\n\t\t\t\t\t\t'{shift} Z X C V B N M ! ? {shift}',\r\n\t\t\t\t\t\t'{meta1} {space} {done}'\r\n\t\t\t\t\t],\r\n\t\t\t\t\tmeta1: [\r\n\t\t\t\t\t\t'1 2 3 4 5 6 7 8 9 0 {bksp}',\r\n\t\t\t\t\t\t'{tab} - / : ; ( ) $ & @ {placeholder}',\r\n\t\t\t\t\t\t'{meta2} . , ? ! \\' \" {meta2}',\r\n\t\t\t\t\t\t'{normal} {space} {done}'\r\n\t\t\t\t\t],\r\n\t\t\t\t\tmeta2: [\r\n\t\t\t\t\t\t'[ ] { } # % ^ * + = {bksp}',\r\n\t\t\t\t\t\t'{tab} _ \\\\ | ~ < > &euro; &pound; &yen; {placeholder}',\r\n\t\t\t\t\t\t'{meta1} . , ? ! \\' \" {meta1}',\r\n\t\t\t\t\t\t'{normal} {space} {done}'\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\ttextarea: {\r\n\t\t\t\t\tnormal: [\r\n\t\t\t\t\t\t'q w e r t y u i o p {bksp}',\r\n\t\t\t\t\t\t'{tab} a s d f g h j k l {enter}',\r\n\t\t\t\t\t\t'{shift} z x c v b n m , . {shift}',\r\n\t\t\t\t\t\t'{meta1} {space} {done}'\r\n\t\t\t\t\t],\r\n\t\t\t\t\tshift: [\r\n\t\t\t\t\t\t'Q W E R T Y U I O P {bksp}',\r\n\t\t\t\t\t\t'{tab} A S D F G H J K L {enter}',\r\n\t\t\t\t\t\t'{shift} Z X C V B N M ! ? {shift}',\r\n\t\t\t\t\t\t'{meta1} {space} {done}'\r\n\t\t\t\t\t],\r\n\t\t\t\t\tmeta1: [\r\n\t\t\t\t\t\t'1 2 3 4 5 6 7 8 9 0 {bksp}',\r\n\t\t\t\t\t\t'{tab} - / : ; ( ) $ & @ {enter}',\r\n\t\t\t\t\t\t'{meta2} . , ? ! \\' \" {meta2}',\r\n\t\t\t\t\t\t'{normal} {space} {done}'\r\n\t\t\t\t\t],\r\n\t\t\t\t\tmeta2: [\r\n\t\t\t\t\t\t'[ ] { } # % ^ * + = {bksp}',\r\n\t\t\t\t\t\t'{tab} _ \\\\ | ~ < > &euro; &pound; &yen; {enter}',\r\n\t\t\t\t\t\t'{meta1} . , ? ! \\' \" {meta1}',\r\n\t\t\t\t\t\t'{normal} {space} {done}'\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\temail: {\r\n\t\t\t\t\t// allowed symbols....\r\n\t\t\t\t\t// '` ~ # $ % ^ & * + _ - = |',\r\n\t\t\t\t\t// '{ } \\\\ / ? ! \\'',\r\n\t\t\t\t\tnormal: [\r\n\t\t\t\t\t\t'q w e r t y u i o p {bksp}',\r\n\t\t\t\t\t\t'{tab} a s d f g h j k l {placeholder}',\r\n\t\t\t\t\t\t'{shift} z x c v b n m @ . {shift}',\r\n\t\t\t\t\t\t'{meta1} _ - {space} .com {done}'\r\n\t\t\t\t\t],\r\n\t\t\t\t\tshift: [\r\n\t\t\t\t\t\t'Q W E R T Y U I O P {bksp}',\r\n\t\t\t\t\t\t'{tab} A S D F G H J K L {placeholder}',\r\n\t\t\t\t\t\t'{shift} Z X C V B N M @ . {shift}',\r\n\t\t\t\t\t\t'{meta1} _ - {space} .com {done}'\r\n\t\t\t\t\t],\r\n\t\t\t\t\tmeta1: [\r\n\t\t\t\t\t\t'1 2 3 4 5 6 7 8 9 0 {bksp}',\r\n\t\t\t\t\t\t'{tab} | { } % ^ * / \\\\ \\' {placeholder}',\r\n\t\t\t\t\t\t'` $ & ~ # = + @ .',\r\n\t\t\t\t\t\t'{normal} ! ? {space} .com {done}'\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\tnumber: {\r\n\t\t\t\t\tnormal: [\r\n\t\t\t\t\t\t'7 8 9 {bksp}',\r\n\t\t\t\t\t\t'4 5 6 {tab}',\r\n\t\t\t\t\t\t'1 2 3',\r\n\t\t\t\t\t\t'0 . {accept}'\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\ttel: {\r\n\t\t\t\t\tnormal: [\r\n\t\t\t\t\t\t'7 8 9 {bksp}',\r\n\t\t\t\t\t\t'4 5 6 {tab}',\r\n\t\t\t\t\t\t'1 2 3',\r\n\t\t\t\t\t\t'0 - {accept}'\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tclasses: {\r\n\t\t\t\tkeyboard_class: 'virtual-keyboard',\r\n\t\t\t\tkey_class: 'virtual-key'\r\n\t\t\t},\r\n\r\n\t\t\tselectors: {\r\n\t\t\t\tkeyboard_class: '.virtual-keyboard',\r\n\t\t\t\tkey_class: '.virtual-key'\r\n\t\t\t}\r\n\t\t}, configuration);\r\n\r\n\t\tthis.ignore_types = '[type=\"checkbox\"], ' +\r\n\t\t\t\t\t\t\t'[type=\"radio\"], ' + \r\n\t\t\t\t\t\t\t'[type=\"submit\"], ' + \r\n\t\t\t\t\t\t\t'[type=\"reset\"], ' + \r\n\t\t\t\t\t\t\t'[type=\"button\"], ' + \r\n\t\t\t\t\t\t\t'[type=\"color\"], ' + \r\n\t\t\t\t\t\t\t'[type=\"range\"], ' + \r\n\t\t\t\t\t\t\t'[type=\"date\"], ' + \r\n\t\t\t\t\t\t\t'[type=\"month\"], ' + \r\n\t\t\t\t\t\t\t'[type=\"week\"], ' + \r\n\t\t\t\t\t\t\t'[type=\"time\"], ' + \r\n\t\t\t\t\t\t\t'[type=\"datetime-local\"], ' + \r\n\t\t\t\t\t\t\t'.no-keyboard, ' + \r\n\t\t\t\t\t\t\t'.disabled, ' + \r\n\t\t\t\t\t\t\t'.is-disabled, ' + \r\n\t\t\t\t\t\t\t'[disabled]';\r\n\r\n\t\t// hold reference to body & html elements\r\n\t\tthis.$body = $('body');\r\n\t\tthis.$html = $('html');\r\n\r\n\t\t// hidden element to convert special html characters with\r\n\t\tthis.$hidden = $('<span>');\r\n\r\n\t\t// will hold the keyboard dom object\r\n\t\tthis.$keyboards = this._createKeyboards();\r\n\r\n\t\t// remember which keyboard is active\r\n\t\tthis.$keyboard = null;\r\n\r\n\t\t// remember which input is active\r\n\t\tthis.$input = null;\r\n\r\n\t\t// DEPRECATED: store initial input for \"cancel\" button\r\n\t\tthis.original_input_text = null;\r\n\r\n\t\t// type of keyboard being displayed (mostly for optimization purposes)\r\n\t\tthis.current_keyboard_layout = '';\r\n\t\tthis.current_keyboard_type = '';\r\n\r\n\t\t// reference to interval loop to be cleared on mouseup and set on mousedown\r\n\t\tthis.repeaterTimeout = null;\r\n\t\tthis.repeaterInterval = null;\r\n\t\tthis.disable_key_repeat = false;\r\n\r\n\t\t// user-controlled moving keyboard\r\n\t\tthis.moving = false;\r\n\t\tthis.mouse_position = { x: 0, y: 0 };\r\n\t\tthis.keyboard_transform_position = { x: 0, y: 0 };\r\n\t\tthis.keyboard_start_transform_position = { x: 0, y: 0 };\r\n\t\tthis.keyboard_dimensions = { width: 0, height: 0 };\r\n\r\n\t\t// screen dimensions used for containing the $keyboard element\r\n\t\t//\t(using the HTML element to ignore scrollbar width, however this won't work with height, nothing will work I guess? ... )\r\n\t\tthis.screen_width = this.$html.outerWidth();\r\n\t\tthis.screen_height = window.innerHeight;\r\n\r\n\t\t// body margin can effect $keyboard if position isn't static, so we need to get this information\r\n\t\tthis.body_position = this.$body.css('position');\r\n\t\tthis.body_margin = { left: 0, top: 0 };\r\n\t\tif (this.body_position !== 'static') {\r\n\t\t\tthis.body_margin.left += parseInt(this.$body.css('margin-left'));\r\n\t\t\tthis.body_margin.top += parseInt(this.$body.css('margin-top'));\r\n\t\t}\r\n\r\n\t\t// remember last key pressed in order to provide a brief delay before key can be pressed again\r\n\t\tthis.last_key_down = {\r\n\t\t\ttime: Date.now(),\r\n\t\t\tvalue: ''\r\n\t\t};\r\n\t}\r\n\r\n\tactivate() {\r\n\t\t$(document).on('click touchend', 'input, textarea', (e) => {\r\n\t\t\tvar $target = $(e.currentTarget);\r\n\r\n\t\t\t// don't open a keyboard for these input types\r\n\t\t\tif ($target.is(this.ignore_types)) { return; }\r\n\r\n\t\t\t// also don't re-open keyboard for the same input (messes up cancel button, DEPRECATED)\r\n\t\t\tif ($target.is(this.$input)) { return; }\r\n\r\n\t\t\t// close keyboard if opened\r\n\t\t\tif (this.isOpened) { this.closeKeyboard(); }\r\n\r\n\t\t\t// if keyboard is enabled, show keyboard\r\n\t\t\tif (!this.configuration.disabled) {\r\n\t\t\t\tthis.openKeyboard($target);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$(document).on('mousedown touchstart', (e) => {\r\n\t\t\tvar keyboard_selector = this.configuration.selectors.keyboard_class;\r\n\t\t\tvar $target = $(e.target);\r\n\r\n\t\t\t// don't close keyboard for the same input or on special multi-touch overlay from the electron-touch-framework\r\n\t\t\tif ($target.is(this.$input) || $target.is('.etf-blocker')) { return; }\r\n\r\n\t\t\t// close keyboard if it's already open, and not if the event happens within the keyboard itself\r\n\t\t\tif (this.isOpened && !$target.closest(keyboard_selector).length) {\r\n\t\t\t\tthis.closeKeyboard();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t$(document).on('mousedown touchstart', '.virtual-keyboard-title', (e) => {\r\n\t\t\t// turn movement flag on, so that global events can be used (don't want them to always be firing off a bunch of code)\r\n\t\t\tthis.moving = true;\r\n\r\n\t\t\tthis.mouse_position = this._getMousePosition(e);\r\n\r\n\t\t\tif (this.configuration.draggable) {\r\n\t\t\t\tthis.keyboard_start_transform_position = this.keyboard_transform_position;\r\n\t\t\t}\r\n\r\n\t\t\t// try to prevent highlighting of text while dragging....\r\n\t\t\tthis.$body.addClass('is-dragging-virtual-keyboard');\r\n\r\n\t\t\t// set indicator on keyboard\r\n\t\t\tthis.$keyboard.addClass('is-dragging');\r\n\t\t});\r\n\r\n\t\t$(document).on('mousemove touchmove', (e) => {\r\n\t\t\tif (this.moving) {\r\n\t\t\t\t// this prevent default is important, we don't want the screen to move when trying to move the keyboard\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t// get the current mouse position, then translate coordinates into x,y transform coordinates\r\n\t\t\t\tvar {x, y} = this._getMousePosition(e);\r\n\t\t\t\tvar x = this.keyboard_start_transform_position.x + (x - this.mouse_position.x);\r\n\t\t\t\tvar y = this.keyboard_start_transform_position.y + (y - this.mouse_position.y);\r\n\t\t\t\tvar left = parseInt(this.$keyboard.css('left'));\r\n\t\t\t\tvar top = parseInt(this.$keyboard.css('top'));\r\n\r\n\t\t\t\t// add transform coords + normal left/top coords\r\n\t\t\t\tvar offset = this._containWithinScreen({\r\n\t\t\t\t\tx: left + x,\r\n\t\t\t\t\ty: top + y,\r\n\t\t\t\t\twidth: this.keyboard_dimensions.width,\r\n\t\t\t\t\theight: this.keyboard_dimensions.height\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// contain coordinate within the screen space available\r\n\t\t\t\tx += offset.x;\r\n\t\t\t\ty += offset.y;\r\n\r\n\t\t\t\t// remember offset for later if/when this keyboard closes\r\n\t\t\t\tthis.keyboard_transform_position = { x, y };\r\n\r\n\t\t\t\tthis.$keyboard.css({\r\n\t\t\t\t\t'transform': 'translate(' + x + 'px, ' + y + 'px)'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$(document).on('mouseup touchend', (e) => {\r\n\t\t\t// if there was a key being repeated, end repeating\r\n\t\t\t//\tNOTE:  Must be at a global level instead of on a specific button b/c of how buttons can be hidden when toggling between keyboards\r\n\t\t\tthis.removeKeyRepeater();\r\n\r\n\t\t\t// if keyboard was/is moving, finalize movement end\r\n\t\t\tif (this.moving) {\r\n\t\t\t\tthis.moving = false;\r\n\t\t\t\tthis.$body.removeClass('is-dragging-virtual-keyboard');\r\n\t\t\t\tthis.$keyboard.removeClass('is-dragging');\r\n\t\t\t}\r\n\r\n\t\t\t// put focus back on input element\r\n\t\t\tif (this.isOpened && this.$input) { this.$input.focus(); }\r\n\t\t});\r\n\t}\r\n\r\n\treconfigure(configuration) {\r\n\t\t// set new configuration\r\n\t\tthis.configuration = $.extend(true, {}, this.configuration, configuration);\r\n\r\n\t\t// close previous keyboard\r\n\t\tthis.closeKeyboard();\r\n\r\n\t\t// need to recreate keyboards based on new configurations\r\n\t\tthis.$keyboards = this._createKeyboards();\r\n\t}\r\n\r\n\tget isOpened() {\r\n\t\treturn (!!this.$keyboard && !!this.$keyboard.parent().length);\r\n\t}\r\n\r\n\tget isFixed() {\r\n\t\treturn (!isNaN(this.configuration.fixed_position.left) && !isNaN(this.configuration.fixed_position.top));\r\n\t}\r\n\r\n\topenKeyboard($element) {\r\n\t\t// remember what input the keyboard is currently open on\r\n\t\tthis.$input = $element.addClass('is-focus-virtual-input').focus();\r\n\t\tthis.original_input_text = this.$input.val();\r\n\r\n\t\t// get keyboard type / layout\r\n\t\tthis.current_keyboard_type = this._getType(this.$input);\r\n\t\tthis.current_keyboard_layout = Object.keys(this.configuration.layout[this.current_keyboard_type])[0];\r\n\r\n\t\t// get a single keyboard out of the $keyboards jquery list\r\n\t\tthis.$keyboard = this.$keyboards.filter('[data-keyboard-type=\"' + this.current_keyboard_type + '\"]');\r\n\r\n\t\t// make sure keyboard is reset to the first layout in that keyboard type\r\n\t\tthis.$keyboard\r\n\t\t\t.children()\r\n\t\t\t.hide()\r\n\t\t\t.filter('[data-layout-type=\"' + this.current_keyboard_layout + '\"]')\r\n\t\t\t.show();\r\n\r\n\r\n\t\t// only position keyboard to element if position flag is set\r\n\t\tif (!this.isFixed) {\r\n\t\t\tthis._appendPositionedKeyboard();\r\n\t\t} else {\r\n\t\t\tthis.$keyboard.appendTo(this.$body).css({\r\n\t\t\t\tposition: 'fixed',\r\n\t\t\t\ttop: this.configuration.fixed_position.top + 'px',\r\n\t\t\t\tleft: this.configuration.fixed_position.left + 'px'\r\n\t\t\t});\r\n\r\n\t\t\t// save dimensions of the current keyboard for dragging purposes\r\n\t\t\tthis.keyboard_dimensions = { width: this.$keyboard.outerWidth(), height: this.$keyboard.outerHeight() };\r\n\t\t}\r\n\r\n\t\t// only mess with transform if draggable flag is true\r\n\t\tif (this.configuration.draggable) {\r\n\t\t\tif (!this.isFixed) {\r\n\t\t\t\t// make sure the transform is reset (in case the keyboard was moved)\r\n\t\t\t\tthis.$keyboard.css({\r\n\t\t\t\t\t'transform': 'translate(0)'\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// if keyboard is draggable, re-apply any transform\r\n\t\t\t\tthis.$keyboard.css({\r\n\t\t\t\t\t'transform': 'translate(' + this.keyboard_transform_position.x + 'px, ' + this.keyboard_transform_position.y + 'px)'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// whole point of all this madness is so that we can shift removal/closing of keyboard to the touchend event when fired from touchstart keyboard keys\r\n\t// w/o this, the keyboard is detached and no touchend event gets fired, thus locking things open b/c they expect a touchend event to fire\r\n\ttouchendDelayedCloseKeyboard() {\r\n\t\tvar finalize = () => {\r\n\t\t\tthis.closeKeyboard();\r\n\t\t\t$(document).off('touchend', finalize);\r\n\t\t};\r\n\r\n\t\t$(document).on('touchend', finalize);\r\n\t}\r\n\r\n\tcloseKeyboard() {\r\n\t\tif (this.$keyboard) { this.$keyboard.detach(); }\r\n\t\tif (this.$input) { this.$input.removeClass('is-focus-virtual-input'); }\r\n\t\tthis.resetKeyboard();\r\n\t}\r\n\r\n\tresetKeyboard() {\r\n\t\tthis.$input = null;\r\n\t\tthis.original_input_text = null;\r\n\r\n\t\t// reset everything involved with moving around the keyboard\r\n\t\tthis.keyboard_dimensions = { width: 0, height: 0 };\r\n\t\tif (this.configuration.draggable && !this.isFixed) {\r\n\t\t\tthis.keyboard_transform_position = { x: 0, y: 0 };\r\n\t\t\tthis.keyboard_start_transform_position = { x: 0, y: 0 };\r\n\t\t}\r\n\t}\r\n\r\n\tswitchLayout(e) {\r\n\t\tvar $key = $(e.currentTarget);\r\n\t\tvar key_selector = this.configuration.selectors.key_class;\r\n\t\tvar key = $key.attr('data-value');\r\n\t\tvar layout = $key.attr('data-layout-type');\r\n\r\n\t\t// if already on the current layout, toggle back to the first layout option\r\n\t\tif (layout == this.current_keyboard_layout) {\r\n\t\t\tlayout = Object.keys(this.configuration.layout[this.current_keyboard_type])[0];\r\n\t\t}\r\n\r\n\t\t// switch between which layout is visible, and add select state to appropriate button\r\n\t\tthis.$keyboard\r\n\t\t\t.children('[data-layout-type=\"' + this.current_keyboard_layout + '\"]')\r\n\t\t\t.hide()\r\n\t\t\t.find('.is-selected').removeClass('is-selected');\r\n\t\tthis.$keyboard\r\n\t\t\t.children('[data-layout-type=\"' + layout + '\"]')\r\n\t\t\t.show()\r\n\t\t\t.find(key_selector + '[data-layout-type=\"' + layout + '\"]').addClass('is-selected');\r\n\r\n\t\t// set new layout\r\n\t\tthis.current_keyboard_layout = layout;\r\n\t}\r\n\r\n\tsetKeyPressedClass(e) {\r\n\t\tvar $button = $(e.currentTarget);\r\n\t\t$button.addClass('was-clicked');\r\n\t\tsetTimeout(() => { $button.removeClass('was-clicked'); }, 50);\r\n\t}\r\n\r\n\tsetKeyRepeater(keyPressedFunction) {\r\n\t\t// enable key repeater\r\n\t\tthis.disable_key_repeat = false;\r\n\r\n\t\t// call the function required to make this key work (at this time the key repeater can be disabled)\r\n\t\tkeyPressedFunction.call(this);\r\n\r\n\t\t// clear previous repeater calls, if any exist\r\n\t\tthis.removeKeyRepeater();\r\n\r\n\t\t// if key repeater is not disabled, repeat key after a short delay\r\n\t\tif (!this.disable_key_repeat) {\r\n\t\t\tthis.repeaterTimeout = setTimeout(() => {\r\n\t\t\t\tthis.repeaterInterval = setInterval(() => {\r\n\t\t\t\t\tkeyPressedFunction.call(this);\r\n\t\t\t\t}, 100);\r\n\t\t\t}, 800);\r\n\t\t}\r\n\t}\r\n\r\n\tremoveKeyRepeater(keyPressedFunction) {\r\n\t\tclearTimeout(this.repeaterTimeout);\r\n\t\tclearInterval(this.repeaterInterval);\r\n\t}\r\n\r\n\tkeyPressed(e) {\r\n\t\tif (!this.$input) { return; }\r\n\t\tvar $target = $(e.currentTarget);\r\n\t\tvar key = $target.attr('data-value');\r\n\t\tvar cpt = this._getCursorPositionAndText();\r\n\t\tvar val = cpt.start.val + key + cpt.end.val;\r\n\r\n\t\tvar max = this.$input.attr('maxlength');\r\n\r\n\t\t// don't go over the maxlength of the 'input' field\r\n\t\tif (max && val.length > max) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.$input.val(val);\r\n\t\tthis.$input.caret(cpt.start.pos + key.length);\r\n\t}\r\n\r\n\tkeyPressedDelete(e) {\r\n\t\tvar cpt = this._getCursorPositionAndText();\r\n\t\tvar val = '';\r\n\r\n\t\t// either remove the character to the left of the cursor, or just delete a chunk of highlighed text\r\n\t\tif (cpt.start.pos === cpt.end.pos) {\r\n\t\t\tcpt.start.pos -= 1;\r\n\t\t\tval = cpt.start.val.substr(0, cpt.start.pos) + cpt.end.val;\r\n\t\t} else {\r\n\t\t\tval = cpt.start.val + cpt.end.val;\r\n\t\t}\r\n\r\n\t\tthis.$input.val(val);\r\n\t\tthis.$input.caret(cpt.start.pos);\r\n\t}\r\n\r\n\tkeyPressedSpace(e) {\r\n\t\tvar cpt = this._getCursorPositionAndText();\r\n\t\tvar val = cpt.start.val + ' ' + cpt.end.val;\r\n\t\tvar max = this.$input.attr('maxlength');\r\n\r\n\t\t// don't go over the maxlength of the 'input' field\r\n\t\tif (max && val.length > max) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.$input.val(val);\r\n\t\tthis.$input.caret(cpt.start.pos + 1);\r\n\t}\r\n\r\n\tkeyPressedCancel(e) {\r\n\t\t// don't repeat this key\r\n\t\tthis.disable_key_repeat = true;\r\n\t\tthis.$input.val(this.original_input_text);\r\n\t\tthis.touchendDelayedCloseKeyboard();\r\n\t}\r\n\r\n\tkeyPressedDone(e) {\r\n\t\t// don't repeat this key\r\n\t\tthis.disable_key_repeat = true;\r\n\t\tthis.touchendDelayedCloseKeyboard();\r\n\t}\r\n\r\n\tkeyPressedClear(e) {\r\n\t\t// don't repeat this key\r\n\t\tthis.disable_key_repeat = true;\r\n\t\tthis.$input.val('');\r\n\t\t// this.touchendDelayedCloseKeyboard();\r\n\t}\r\n\r\n\tkeyPressedAccept(e) {\r\n\t\t// don't repeat this key\r\n\t\tthis.disable_key_repeat = true;\r\n\t\tthis.touchendDelayedCloseKeyboard();\r\n\t}\r\n\r\n\tkeyPressedEnter(e) {\r\n\t\tvar cpt = this._getCursorPositionAndText();\r\n\t\tvar val = cpt.start.val + '\\n' + cpt.end.val;\r\n\t\tvar max = this.$input.attr('maxlength');\r\n\r\n\t\t// don't go over the maxlength of the 'input' field\r\n\t\tif (max && val.length > max) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.$input.val(val);\r\n\t\tthis.$input.caret(cpt.start.pos + 1);\r\n\t}\r\n\r\n\tkeyPressedTab(e) {\r\n\t\tvar $inputs = $('input, textarea');\r\n\r\n\t\t// don't repeat this key\r\n\t\tthis.disable_key_repeat = true;\r\n\r\n\t\t// get the next \"input\" after the current one\r\n\t\tvar $next_input = $($inputs.get($inputs.index(this.$input) + 1));\r\n\t\tif ($next_input && $next_input.length) {\r\n\t\t\tthis.closeKeyboard();\r\n\r\n\t\t\t// for some reason, need a short delay before focus can be given? not sure why...\r\n\t\t\tsetTimeout(() => { $next_input.focus(); }, 1);\r\n\r\n\t\t\tif (!$next_input.is(this.ignore_types)) {\r\n\t\t\t\t// if keyboard is enabled, show keyboard\r\n\t\t\t\tif (!this.configuration.disabled) {\r\n\t\t\t\t\tthis.openKeyboard($next_input);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// special hack b/c the original element will have been removed per the closeKeyboard call above, and thus no touchend is fired and thus blocker is never removed\r\n\t\tvar finalize = () => {\r\n\t\t\t$('.etf-blocker').hide();\r\n\t\t\t$(document).off('touchstart', finalize);\r\n\t\t};\r\n\r\n\t\t$(document).on('touchstart', finalize);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/*****************************************************/\r\n\t/******            Private Functions            ******/\r\n\t/*****************************************************/\r\n\r\n\t/**\r\n\t* Given an element, return what type of keyboard is/should be connected to it\r\n\t* @params {$input} - element connected to keyboard\r\n\t* @returns {String} - type of keyboard to use based on $input\r\n\t**/\r\n\t_getType($input) {\r\n\t\tvar type = this.$input.attr('data-keyboard-type') || this.$input.attr('type') || this.$input.prop('tagName').toLowerCase();\r\n\r\n\t\t// if keyboard type is not in configuration, set default\r\n\t\treturn (this.configuration.layout[type] && !(type in this.configuration.layout[type]))? type: 'default';\r\n\t}\r\n\r\n\t// create all the keyboards possible given the configuration,\r\n\t//\t\thowever only a few of them will be used\r\n\t_createKeyboards() {\r\n\t\tvar keyboard_class = this.configuration.classes.keyboard_class;\r\n\t\tvar key_class = this.configuration.classes.key_class;\r\n\r\n\t\tvar $keyboards = $();\r\n\r\n\t\tfor (let keyboard_type_key in this.configuration.layout) {\r\n\t\t\tlet keyboard_type = this.configuration.layout[keyboard_type_key];\r\n\t\t\tvar $keyboard = $('<div>');\r\n\r\n\t\t\t$keyboard\r\n\t\t\t\t.attr('data-keyboard-type', keyboard_type_key)\r\n\t\t\t\t.addClass(keyboard_class);\r\n\r\n\t\t\tif (!!this.configuration.draggable) {\r\n\t\t\t\t$keyboard.addClass('is-draggable');\r\n\t\t\t}\r\n\r\n\t\t\tfor (let layout_key in keyboard_type) {\r\n\t\t\t\tlet layout_type = keyboard_type[layout_key];\r\n\t\t\t\tvar $layout = $('<div>');\r\n\r\n\t\t\t\t$layout.attr('data-layout-type', layout_key);\r\n\r\n\t\t\t\t// add a title to keyboard (will be used as something to click on to move the keyboard)\r\n\t\t\t\tif (!!this.configuration.draggable) {\r\n\t\t\t\t\t$layout.append('<div class=\"virtual-keyboard-title\">' + this.configuration.title + '</div>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create rows of keys\r\n\t\t\t\tfor (let row_key in layout_type) {\r\n\t\t\t\t\tlet row = layout_type[row_key];\r\n\t\t\t\t\tvar $row = $('<div>');\r\n\r\n\t\t\t\t\tfor (let key of row.split(' ')) {\r\n\t\t\t\t\t\tvar $button = $('<button>');\r\n\t\t\t\t\t\tvar key_name = key;\r\n\r\n\t\t\t\t\t\t// key functionality\r\n\t\t\t\t\t\tif (key[0] === '{' && key.length > 1) {\r\n\t\t\t\t\t\t\t// special case key functionality\r\n\t\t\t\t\t\t\tvar layout = key = key.substr(1, key.length - 2);\r\n\t\t\t\t\t\t\tvar custom = false;\r\n\r\n\t\t\t\t\t\t\t// check for custom mappings of key names and special functions that may be available to use\r\n\t\t\t\t\t\t\tif (key in this.configuration.key_map) {\r\n\t\t\t\t\t\t\t\tif (this.configuration.key_map[key].name) {\r\n\t\t\t\t\t\t\t\t\tkey_name = this.configuration.key_map[key].name;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (this.configuration.key_map[key].onKeyPressed) {\r\n\t\t\t\t\t\t\t\t\tcustom = true;\r\n\t\t\t\t\t\t\t\t\t$button.data('customFunction', this.configuration.key_map[key].onKeyPressed);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (custom) {\r\n\t\t\t\t\t\t\t\t$button\r\n\t\t\t\t\t\t\t\t\t.attr('data-layout-type', layout)\r\n\t\t\t\t\t\t\t\t\t.on('mousedown touchstart', (e) => {\r\n\t\t\t\t\t\t\t\t\t\tvar value = $(e.currentTarget).attr('data-value');\r\n\r\n\t\t\t\t\t\t\t\t\t\t// need to prevent default so that only 1 event is fired (not both mouse and touch)\r\n\t\t\t\t\t\t\t\t\t\t// e.preventDefault();\r\n\r\n\t\t\t\t\t\t\t\t\t\t// prevents key actions from occuring based on key_delay\r\n\t\t\t\t\t\t\t\t\t\tif (this.last_key_down.value == value && Date.now() - this.last_key_down.time < this.configuration.key_delay) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// remember the current time & value of button press\r\n\t\t\t\t\t\t\t\t\t\tthis.last_key_down = {\r\n\t\t\t\t\t\t\t\t\t\t\ttime: Date.now(),\r\n\t\t\t\t\t\t\t\t\t\t\tvalue\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\t\tthis.setKeyRepeater(() => {\r\n\t\t\t\t\t\t\t\t\t\t\t// get and call a custom function with the context of 'this' class\r\n\t\t\t\t\t\t\t\t\t\t\tvar customFunction = $(e.currentTarget).data('customFunction');\r\n\t\t\t\t\t\t\t\t\t\t\tcustomFunction.call(this, e);\r\n\t\t\t\t\t\t\t\t\t\t\tthis.setKeyPressedClass(e);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$button\r\n\t\t\t\t\t\t\t\t\t.attr('data-layout-type', layout)\r\n\t\t\t\t\t\t\t\t\t.on('mousedown touchstart', (e) => {\r\n\t\t\t\t\t\t\t\t\t\tvar value = $(e.currentTarget).attr('data-value');\r\n\r\n\t\t\t\t\t\t\t\t\t\t// need to prevent default so that only 1 event is fired (not both mouse and touch)\r\n\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\t\t\t\t\t\t// prevents key actions from occuring based on key_delay\r\n\t\t\t\t\t\t\t\t\t\tif (this.last_key_down.value == value && Date.now() - this.last_key_down.time < this.configuration.key_delay) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// remember the current time & value of button press\r\n\t\t\t\t\t\t\t\t\t\tthis.last_key_down = {\r\n\t\t\t\t\t\t\t\t\t\t\ttime: Date.now(),\r\n\t\t\t\t\t\t\t\t\t\t\tvalue\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\t\tthis.setKeyRepeater(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.switchLayout(e);\r\n\t\t\t\t\t\t\t\t\t\t\tthis.setKeyPressedClass(e);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// normal key functionality\r\n\t\t\t\t\t\t\t$button\r\n\t\t\t\t\t\t\t\t.on('mousedown touchstart', (e) => {\r\n\t\t\t\t\t\t\t\t\t\tvar value = $(e.currentTarget).attr('data-value');\r\n\r\n\t\t\t\t\t\t\t\t\t\t// need to prevent default so that only 1 event is fired (not both mouse and touch)\r\n\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\t\t\t\t\t\t// prevents key actions from occuring based on key_delay\r\n\t\t\t\t\t\t\t\t\t\tif (this.last_key_down.value == value && Date.now() - this.last_key_down.time < this.configuration.key_delay) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// remember the current time & value of button press\r\n\t\t\t\t\t\t\t\t\t\tthis.last_key_down = {\r\n\t\t\t\t\t\t\t\t\t\t\ttime: Date.now(),\r\n\t\t\t\t\t\t\t\t\t\t\tvalue\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tthis.setKeyRepeater(() => {\r\n\t\t\t\t\t\t\t\t\t\tthis.keyPressed(e);\r\n\t\t\t\t\t\t\t\t\t\tthis.setKeyPressedClass(e);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// setup button with some generalized stuff\r\n\t\t\t\t\t\t$button\r\n\t\t\t\t\t\t\t.addClass(key_class)\r\n\t\t\t\t\t\t\t.html(key_name)\r\n\t\t\t\t\t\t\t.attr('data-value', this.$hidden.html(key).text())\r\n\t\t\t\t\t\t\t.appendTo($row);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$row.appendTo($layout);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$layout.appendTo($keyboard);\r\n\t\t\t}\r\n\r\n\t\t\t$keyboards = $keyboards.add($keyboard);\r\n\t\t}\r\n\r\n\t\treturn $keyboards;\r\n\t}\r\n\r\n\t// position and append keyboard to the body of the page\r\n\t_appendPositionedKeyboard() {\r\n\t\tvar input_offset = this.$input.offset();\r\n\t\tvar input_width = this.$input.outerWidth();\r\n\t\tvar input_height = this.$input.outerHeight();\r\n\r\n\t\t// ghost keyboard to get dimensions, so that it can be pushed into the viewable screen\r\n\t\tthis.$keyboard.css('visibility', 'hidden').appendTo(this.$body);\r\n\r\n\t\t// save dimensions of the current keyboard for dragging purposes\r\n\t\tthis.keyboard_dimensions = { width: this.$keyboard.outerWidth(), height: this.$keyboard.outerHeight() };\r\n\r\n\t\tvar scroll_offset = this.$body.scrollTop();\r\n\t\tvar offset = this._containWithinScreen({\r\n\t\t\tx: input_offset.left,\r\n\t\t\ty: input_offset.top + input_height,\r\n\t\t\twidth: this.keyboard_dimensions.width,\r\n\t\t\theight: this.keyboard_dimensions.height\r\n\t\t});\r\n\r\n\t\t// shift keyboard over if out of bounds (if not out of bounds the value is 0 and won't matter)\r\n\t\tinput_offset.left += offset.x;\r\n\r\n\t\t// keyboard is out of bounds on the bottom of the page, flip up so that it can be seen\r\n\t\tif (offset.y < 0) {\r\n\t\t\t// need to handle label so that keyboard doesn't cover it\r\n\t\t\tvar $label = this.$input.parent().closest('label');\r\n\t\t\tif (!$label.length) { $label = $('label[for=\"' + this.$input.attr('id') + '\"]'); }\r\n\r\n\t\t\tif ($label.length) {\r\n\t\t\t\tvar label_offset = $label.offset();\r\n\t\t\t\tinput_offset.top -= (input_offset.top - label_offset.top);\r\n\t\t\t}\r\n\r\n\t\t\tinput_offset.top -= input_height + this.keyboard_dimensions.height;\r\n\t\t}\r\n\r\n\t\tthis.$keyboard.css({\r\n\t\t\tvisibility: 'visible',\r\n\t\t\ttop: input_offset.top + input_height - this.body_margin.top + 'px',\r\n\t\t\tleft: input_offset.left - this.body_margin.left + 'px'\r\n\t\t});\r\n\t}\r\n\r\n\t// not a typical \"get\" as it does a lot of other stuff, so you really want to \"get\" once and remember for later\r\n\t_getCursorPositionAndText() {\r\n\t\tvar val = '';\r\n\r\n\t\tif (this.$input) {\r\n\t\t\tval = this.$input.val();\r\n\t\t}\r\n\r\n\t\t// Input type \"email\" and \"number\" don't support selectionStart & selectionEnd\r\n\t\ttry {\r\n\t\t\tvar start_pos = this.$input[0].selectionStart;\r\n\t\t\tvar end_pos = this.$input[0].selectionEnd;\r\n\t\t} catch (error) {\r\n\t\t\tvar start_pos = val.length;\r\n\t\t\tvar end_pos = val.length;\r\n\t\t}\r\n\r\n\t\t// need to splice value in half, and insert key input between the given selection\r\n\t\tvar start_val = val.substr(0, start_pos);\r\n\t\tvar end_val = val.substr(end_pos, val.length);\r\n\r\n\t\treturn {\r\n\t\t\tstart: {\r\n\t\t\t\tpos: start_pos,\r\n\t\t\t\tval: start_val\r\n\t\t\t},\r\n\t\t\tend: {\r\n\t\t\t\tpos: end_pos,\r\n\t\t\t\tval: end_val\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// the mouse coordinates are different depending on a standard event or a special touch event\r\n\t_getMousePosition(e) {\r\n\t\tvar pageX = e.pageX, pageY = e.pageY;\r\n\t\tif (isNaN(pageX) || isNaN(pageY)) {\r\n\t\t\tpageX = e.touches[0].pageX;\r\n\t\t\tpageY = e.touches[0].pageY;\r\n\t\t}\r\n\t\treturn { x: pageX, y: pageY };\r\n\t}\r\n\r\n\t// object can be either a simple point (x, y) or a box (x, y, width, height)\r\n\t//\t\tNOTE:  Currently not handling horizontal scrolling as an optimization\r\n\t_containWithinScreen(obj) {\r\n\t\tvar scroll_offset = this.$body.scrollTop();\r\n\t\tvar x = 0, y = 0;\r\n\r\n\t\t// make sure obj has a width / height value\r\n\t\tobj.width = (obj.width)? obj.width: 0;\r\n\t\tobj.height = (obj.height)? obj.height: 0;\r\n\r\n\t\t// account for any offset on the body element (I suppose if the keyboard isn't being added to the body, this wouldn't be wise or necessary...)\r\n\t\tobj.x += this.body_margin.left;\r\n\t\tobj.y += this.body_margin.top;\r\n\r\n\t\tif (obj.x < 0) {\r\n\t\t\tx = -obj.x;\r\n\t\t} else if (obj.x + obj.width > this.screen_width) {\r\n\t\t\tx = this.screen_width - (obj.x + obj.width);\r\n\t\t}\r\n\r\n\t\tif (obj.y < 0 + scroll_offset) {\r\n\t\t\ty = scroll_offset - obj.y;\r\n\t\t} else if (obj.y + obj.height > this.screen_height + scroll_offset) {\r\n\t\t\ty = (this.screen_height + scroll_offset) - (obj.y + obj.height);\r\n\t\t}\r\n\r\n\t\treturn { x, y }\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n// save global reference to keyboard in case someone needs to access functions or change something\r\nvar VirtualKeyboard;\r\n\r\n(() => {\r\n\t// // load in CSS file\r\n\t// $('head').append('<link href=\"../src/keyboard.css\" rel=\"stylesheet\">');\r\n\r\n\tVirtualKeyboard = new Keyboard();\r\n\tVirtualKeyboard.activate();\r\n})();\r\n"]}